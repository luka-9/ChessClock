{"version":3,"sources":["TimePicker/styles.module.css","Clock/styles.module.css","TimePicker/index.tsx","Clock/index.tsx","App/index.tsx","index.tsx"],"names":["module","exports","history","useHistory","options","map","number","String","minutes","label","onClick","push","className","styles","component","style","height","window","innerHeight","Option","display","justifyContent","alignItems","cursor","fontSize","replace","params","useParams","initialMinutes","parseInt","isNaN","initialMiliseconds","useState","selectedTimerIndex","setSelectedTimerIndex","milisecondsLeft","setMilisecondsLeft","models","useMemo","index","time","Date","getUTCHours","getUTCMinutes","seconds","getUTCSeconds","expired","selected","useEffect","interval","setInterval","remainingMiliseconds","mutableMiliseconds","splice","clearInterval","Timer","backgroundColor","disabled","exact","path","TimePicker","Clock","to","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,UAAY,4B,mBCA9BD,EAAOC,QAAU,CAAC,UAAY,4B,gJCEf,aACX,IAAMC,EAAUC,cAEVC,EAAU,CAAC,EAAG,EAAG,GAAI,GAAI,IAC1BC,KAAI,SAAAC,GAAM,OAAIC,OAAOD,MACrBD,KAAI,SAAAG,GAAO,MAAK,CACbC,MAAOD,EACPE,QAAS,kBAAMR,EAAQS,KAAR,WAAiBH,SAGxC,OACI,qBAAKI,UAAWC,IAAOC,UAAWC,MAAO,CAAEC,OAAQC,OAAOC,aAA1D,SACKd,EAAQC,IAAIc,MAKnBA,EAAS,SAAC,GAAgE,IAA9DV,EAA6D,EAA7DA,MAAOC,EAAsD,EAAtDA,QACrB,OACI,qBAAKK,MAAO,CAAEK,QAAS,OAAQC,eAAgB,SAAUC,WAAY,SAAUC,OAAQ,WAAmBb,UAA1G,SACI,mBAAGK,MAAO,CAACS,SAAU,IAArB,SAA2Bf,O,yCCfxB,aAAO,IACVgB,EAAYtB,cAAZsB,QACFC,EAASC,cACTC,EAAiBC,SAASH,EAAOlB,UAEnCsB,MAAMF,IAAmBA,EAAiB,IAC1CH,EAAQ,KAGZ,IACMM,EAAsC,KADJ,GAAjBH,GATN,EAYmCI,qBAZnC,mBAYVC,EAZU,KAYUC,EAZV,OAa6BF,mBAAS,CAACD,EAAoBA,IAb3D,mBAaVI,EAbU,KAaOC,EAbP,KAeXC,EAASC,mBAAQ,kBAAMH,EAAgB9B,KAAI,SAAC8B,EAAiBI,GAC/D,IAAMC,EAAO,IAAIC,KAAKN,GAEhB3B,EAAkB,GADVgC,EAAKE,cACUF,EAAKG,gBAC5BC,EAAUJ,EAAKK,gBAEfC,EAA8B,IAApBX,EAEhB,MAAQ,CACJ1B,MAAM,GAAD,OAAKD,EAAL,YAAgBoC,EAAU,GAAK,IAAM,IAArC,OAA0CA,GAC/ClC,QAAS,kBAAOoC,GAAWZ,GAAuBK,EAAQ,GAAK,IAC/DQ,SAAUR,IAAUN,EACpBa,gBAGN,CAACX,EAAiBF,IAwBpB,OAtBAe,qBAAU,WACN,GAAKf,GAA6C,IAAvBA,EAA3B,CAIA,IAAMgB,EAAWC,aAAY,WACzB,IAAMC,EAAuBhB,EAAgBF,GAAsB,IAEnE,KAAIkB,EAAuB,GAA3B,CAIA,IAAIC,EAAqBjB,EACzBiB,EAAmBC,OAAOpB,EAAoB,EAAGkB,GACjDf,EAAmB,YAAIgB,OACxB,KAEH,OAAO,WACHE,cAAcL,OAEnB,CAAChB,IAGA,qBAAKrB,UAAWC,IAAOC,UAAWC,MAAO,CAAEC,OAAQC,OAAOC,aAA1D,SACKmB,EAAOhC,IAAIkD,MAKlBA,EAAQ,SAAC,GAAyH,IAAvH9C,EAAsH,EAAtHA,MAAOsC,EAA+G,EAA/GA,SAAUrC,EAAqG,EAArGA,QAASoC,EAA4F,EAA5FA,QACvC,OACI,qBAAK/B,MAAK,yBAAIK,QAAS,OAAQC,eAAgB,SAAUC,WAAY,SAAUC,OAAQ,WAAewB,GAAY,CAAES,gBAAiB,WAAiBV,GAAW,CAAEU,gBAAiB,QAAkB9C,UAAS+C,SAAUX,EAAzN,SACI,mBAAG/B,MAAO,CAACS,SAAU,KAArB,SAA4Bf,OCpEzB,oBACX,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOiD,OAAK,EAACC,KAAK,IAAI7C,UAAW8C,IACjC,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,YAAY7C,UAAW+C,IACzC,cAAC,IAAD,CAAUC,GAAG,YCJzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.76670531.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"styles_component__NOHXs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"styles_component__kXdSa\"};","import styles from \"./styles.module.css\"\nimport { useHistory } from \"react-router-dom\";\n\nexport default () => {\n    const history = useHistory()\n\n    const options = [3, 5, 10, 25, 60]\n        .map(number => String(number))\n        .map(minutes => ({\n            label: minutes, \n            onClick: () => history.push(`/${minutes}`)\n        }))\n\n    return (\n        <div className={styles.component} style={{ height: window.innerHeight }}>\n            {options.map(Option)}\n        </div>\n    )\n}\n\nconst Option = ({ label, onClick }: { label: string, onClick: () => void }) => {\n    return (\n        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\" }} {...{ onClick }}>\n            <p style={{fontSize: 70}}>{label}</p>\n        </div>\n    )\n}\n","import { useEffect, useMemo, useState } from \"react\"\nimport { useHistory, useParams } from \"react-router-dom\"\nimport styles from \"./styles.module.css\"\n\ninterface Props {\n    minutes: string\n}\n\nexport default () => {\n    const { replace } = useHistory()\n    const params = useParams<Props>()\n    const initialMinutes = parseInt(params.minutes)\n\n    if (isNaN(initialMinutes) || initialMinutes < 1) {\n        replace(\"/\")\n    }\n    \n    const initialSeconds = initialMinutes * 60\n    const initialMiliseconds = initialSeconds * 1000;\n    \n    const [selectedTimerIndex, setSelectedTimerIndex] = useState<number>()\n    const [milisecondsLeft, setMilisecondsLeft] = useState([initialMiliseconds, initialMiliseconds])\n    \n    const models = useMemo(() => milisecondsLeft.map((milisecondsLeft, index) => {\n        const time = new Date(milisecondsLeft)\n        const hours = time.getUTCHours()\n        const minutes = hours * 60 + time.getUTCMinutes()\n        const seconds = time.getUTCSeconds()\n\n        const expired = milisecondsLeft === 0\n\n        return ({\n            label: `${minutes}:${seconds < 10 ? \"0\" : \"\"}${seconds}`,\n            onClick: () => !expired && setSelectedTimerIndex((index + 1) % 2),\n            selected: index === selectedTimerIndex,\n            expired\n        })   \n    })\n    , [milisecondsLeft, selectedTimerIndex])\n\n    useEffect(() => {\n        if (!selectedTimerIndex && selectedTimerIndex !== 0) {\n            return;\n        }\n\n        const interval = setInterval(() => {\n            const remainingMiliseconds = milisecondsLeft[selectedTimerIndex] - 1000\n\n            if (remainingMiliseconds < 0) {\n                return;\n            }\n            \n            let mutableMiliseconds = milisecondsLeft;\n            mutableMiliseconds.splice(selectedTimerIndex, 1, remainingMiliseconds)\n            setMilisecondsLeft([...mutableMiliseconds])\n        }, 1000);\n        \n        return () => {\n            clearInterval(interval)\n        }\n    }, [selectedTimerIndex])\n\n    return (\n        <div className={styles.component} style={{ height: window.innerHeight }}>\n            {models.map(Timer)}\n        </div>\n    )\n}\n\nconst Timer = ({ label, selected, onClick, expired }: { label: string, selected?: boolean, onClick: () => void, expired: boolean }) => {\n    return (\n        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\", ...(selected && { backgroundColor: \"yellow\" }), ...(expired && { backgroundColor: \"red\" }) }} {...{ onClick, disabled: expired }}>\n            <p style={{fontSize: 100}}>{label}</p>\n        </div>\n    )\n}\n","import { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\"\nimport TimePicker from \"TimePicker\"\nimport Clock from \"Clock\"\n\nexport default () => (\n    <Router>\n        <Switch>\n            <Route exact path=\"/\" component={TimePicker} />\n            <Route exact path=\"/:minutes\" component={Clock} />\n            <Redirect to=\"/\" />\n        </Switch>\n    </Router>\n)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}